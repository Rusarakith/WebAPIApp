{"ast":null,"code":"import ResponseDto from \"../Components/Dtos/ResponseDto\";\nimport { saveAs } from 'file-saver';\nexport const login = async User => {\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const options = {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: headers,\n    body: JSON.stringify(User)\n  };\n  return fetch(`${process.env.REACT_APP_WEB_API}/user/login`, options).then(res => {\n    console.log(res);\n    if (res.status === 200) {\n      return res.json().then(data => {\n        console.log(data);\n        let response = new ResponseDto(null, res.status, data.message, null, data.token);\n        return response;\n      });\n    } else {\n      return res.json().then(data => {\n        console.log(data);\n        let response = new ResponseDto(null, res.status, data.message, null);\n        return response;\n      });\n    }\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["ResponseDto","saveAs","login","User","headers","Headers","append","options","method","mode","body","JSON","stringify","fetch","process","env","REACT_APP_WEB_API","then","res","console","log","status","json","data","response","message","token","catch","err"],"sources":["/Users/rusarakithsahan/NIBM/Web API/CW/WebAPIApp/src/Apis/User.api.js"],"sourcesContent":["import ResponseDto from \"../Components/Dtos/ResponseDto\";\nimport { saveAs } from 'file-saver';\n\nexport const login = async (User) => {\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    const options = {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: headers,\n        body: JSON.stringify(User),\n    };\n\n    return fetch(`${process.env.REACT_APP_WEB_API}/user/login`, options)\n        .then((res) => {\n            console.log(res)\n            if (res.status === 200) {\n                return res.json().then((data) => {\n                    console.log(data)\n                    let response = new ResponseDto(null, res.status, data.message, null, data.token);\n                    return response;\n                });\n            } else {\n                return res.json().then((data) => {\n                    console.log(data)\n                    let response = new ResponseDto(null, res.status, data.message, null);\n                    return response;\n                });\n            }\n        })\n        .catch((err) => console.log(err));\n};"],"mappings":"AAAA,OAAOA,WAAW,MAAM,gCAAgC;AACxD,SAASC,MAAM,QAAQ,YAAY;AAEnC,OAAO,MAAMC,KAAK,GAAG,MAAOC,IAAI,IAAK;EACjC,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAClD,MAAMC,OAAO,GAAG;IACZC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,MAAM;IACZL,OAAO,EAAEA,OAAO;IAChBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI;EAC7B,CAAC;EAED,OAAOU,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,iBAAkB,aAAY,EAAET,OAAO,CAAC,CAC/DU,IAAI,CAAEC,GAAG,IAAK;IACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,IAAIA,GAAG,CAACG,MAAM,KAAK,GAAG,EAAE;MACpB,OAAOH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAAEM,IAAI,IAAK;QAC7BJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;QACjB,IAAIC,QAAQ,GAAG,IAAIxB,WAAW,CAAC,IAAI,EAAEkB,GAAG,CAACG,MAAM,EAAEE,IAAI,CAACE,OAAO,EAAE,IAAI,EAAEF,IAAI,CAACG,KAAK,CAAC;QAChF,OAAOF,QAAQ;MACnB,CAAC,CAAC;IACN,CAAC,MAAM;MACH,OAAON,GAAG,CAACI,IAAI,CAAC,CAAC,CAACL,IAAI,CAAEM,IAAI,IAAK;QAC7BJ,OAAO,CAACC,GAAG,CAACG,IAAI,CAAC;QACjB,IAAIC,QAAQ,GAAG,IAAIxB,WAAW,CAAC,IAAI,EAAEkB,GAAG,CAACG,MAAM,EAAEE,IAAI,CAACE,OAAO,EAAE,IAAI,CAAC;QACpE,OAAOD,QAAQ;MACnB,CAAC,CAAC;IACN;EACJ,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}