{"ast":null,"code":"var _jsxFileName = \"/Users/rusarakithsahan/NIBM/Web API/CW/WebAPIApp/src/Store/AuthManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport JwtDecoder from \"../Components/Utils/JwtDecoder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet logoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  userRole: \"\",\n  login: (token, expirationTime) => {},\n  logout: () => {}\n});\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjustedDateTime = new Date(expirationTime * 1000);\n  const adjustedTime = adjustedDateTime.getTime();\n  const remainingDuration = adjustedTime - currentTime;\n  return remainingDuration;\n};\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n  const storedUserId = localStorage.getItem('userId');\n  const storedExpirationDate = localStorage.getItem('expirationTime');\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  if (remainingTime <= 60000) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userId');\n    return null;\n  }\n  return {\n    token: storedToken,\n    duration: remainingTime,\n    userId: storedUserId\n  };\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const tokenData = retrieveStoredToken();\n  let initialToken;\n  let initialUserId;\n  let role;\n  if (tokenData) {\n    let json = JwtDecoder(tokenData.token);\n    role = json.userRole;\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userId;\n  }\n  const [token, setToken] = useState(initialToken);\n  const [userId, setUserId] = useState(initialUserId);\n  const [userRole, setUserRole] = useState(role);\n  const userIsLoggedIn = !!token;\n  const getUserRole = token => {\n    let json = JwtDecoder(token);\n    let role = json.role;\n    setUserRole(role);\n  };\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationTime');\n    localStorage.removeItem('userId');\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n  const loginHandler = (token, expirationTime, userId) => {\n    setToken(token);\n    setUserId(userId);\n    localStorage.setItem('token', token);\n    localStorage.setItem('expirationTime', expirationTime);\n    localStorage.setItem('userId', userId);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n  useEffect(() => {\n    {\n      userIsLoggedIn === true && getUserRole(token);\n    }\n  });\n  const contextValue = {\n    token: token,\n    userId: userId,\n    userRole: userRole,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"La8kbaOavJggaIHbdpkpgacGNME=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","JwtDecoder","jsxDEV","_jsxDEV","logoutTimer","AuthContext","createContext","token","isLoggedIn","userRole","login","expirationTime","logout","calculateRemainingTime","currentTime","Date","getTime","adjustedDateTime","adjustedTime","remainingDuration","retrieveStoredToken","storedToken","localStorage","getItem","storedUserId","storedExpirationDate","remainingTime","removeItem","duration","userId","AuthContextProvider","props","_s","tokenData","initialToken","initialUserId","role","json","setToken","setUserId","setUserRole","userIsLoggedIn","getUserRole","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rusarakithsahan/NIBM/Web API/CW/WebAPIApp/src/Store/AuthManager.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport JwtDecoder from \"../Components/Utils/JwtDecoder\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n    token: \"\",\n    isLoggedIn: false,\n    userRole: \"\",\n    login: (token, expirationTime) => { },\n    logout: () => { },\n});\nconst calculateRemainingTime = (expirationTime) => {\n    const currentTime = new Date().getTime();\n    const adjustedDateTime = new Date(expirationTime * 1000);\n\n    const adjustedTime = adjustedDateTime.getTime();\n\n    const remainingDuration = adjustedTime - currentTime;\n    return remainingDuration;\n}\n\nconst retrieveStoredToken = () => {\n    const storedToken = localStorage.getItem('token');\n    const storedUserId = localStorage.getItem('userId');\n    const storedExpirationDate = localStorage.getItem('expirationTime');\n\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\n    if (remainingTime <= 60000) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        localStorage.removeItem('userId');\n        return null;\n    }\n\n    return { token: storedToken, duration: remainingTime, userId: storedUserId };\n};\n\nexport const AuthContextProvider = (props) => {\n    const tokenData = retrieveStoredToken();\n    let initialToken;\n    let initialUserId;\n    let role;\n    if (tokenData) {\n        let json = JwtDecoder(tokenData.token)\n        role = json.userRole\n        initialToken = tokenData.token;\n        initialUserId = tokenData.userId;\n    }\n\n    const [token, setToken] = useState(initialToken);\n    const [userId, setUserId] = useState(initialUserId);\n    const [userRole, setUserRole] = useState(role);\n\n    const userIsLoggedIn = !!token;\n\n    const getUserRole = (token) => {\n        let json = JwtDecoder(token)\n        let role = json.role\n        setUserRole(role);\n    };\n\n    const logoutHandler = useCallback(() => {\n        setToken(null);\n        setUserId(null);\n        localStorage.removeItem('token');\n        localStorage.removeItem('expirationTime');\n        localStorage.removeItem('userId');\n        if (logoutTimer) {\n            clearTimeout(logoutTimer);\n        }\n    }, []);\n\n    const loginHandler = (token, expirationTime, userId) => {\n        setToken(token);\n        setUserId(userId);\n        localStorage.setItem('token', token);\n        localStorage.setItem('expirationTime', expirationTime);\n        localStorage.setItem('userId', userId);\n\n        const remainingTime = calculateRemainingTime(expirationTime);\n\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\n    };\n\n    useEffect(() => {\n        if (tokenData) {\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n        }\n\n    }, [tokenData, logoutHandler]);\n\n    useEffect(() => {\n        { userIsLoggedIn === true && getUserRole(token) }\n    })\n\n    const contextValue = {\n        token: token,\n        userId: userId,\n        userRole: userRole,\n        isLoggedIn: userIsLoggedIn,\n        login: loginHandler,\n        logout: logoutHandler,\n    }\n    return <AuthContext.Provider value={contextValue}>{props.children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}